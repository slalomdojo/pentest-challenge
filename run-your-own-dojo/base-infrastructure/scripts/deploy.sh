#!/bin/bash

if [[ -z "$TERRAFORM_STATE_BUCKET_NAME" ]]; then
	echo 'Please specify the bucket name for the terraform state file using the TERRAFORM_STATE_BUCKET_NAME variable)'
    echo 'Exiting...'
    exit 1
fi

if [[ -z "$WORKSTATION_IP" ]]; then
	echo 'Please specify your workstation IP so it can be whitelisted with the Attacker instance. Use the variable: WORKSTATION_IP'
    echo 'Exiting...'
    exit 1
fi

if [[ -z "$TEAMS" ]]; then
	n_teams=1
else
    n_teams=$TEAMS
fi

# Uses terraform to launch the base infrastructure
terraform init -backend-config="bucket=$TERRAFORM_STATE_BUCKET_NAME"
terraform apply -auto-approve -var "number_of_teams=$n_teams" -var "workstation_ip=$WORKSTATION_IP"

sleep 60

# Setting up attacker script
terraform output attacker_user_data > request

# Getting the SSH private key
terraform output attacker_ssh_private_key > ./attacker
chmod 600 ./attacker

target_private_ip=$(terraform output target_private_ip)

# Copying to and configuring the request service in attacker machines
attacker_ips=`terraform output attacker_eip | tr '\r\n' '#' | sed 's/#//g'`
IFS=,
arr=($attacker_ips)
for i in "${!arr[@]}"; do
    echo "${arr[$i]}"
    scp -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey request ec2-user@${arr[$i]}:~/
    ssh -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ec2-user@${arr[$i]} "chmod +x ~/request"
    ssh -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ec2-user@${arr[$i]} "sudo mv ~/request /usr/bin"
    scp -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey request.service ec2-user@${arr[$i]}:~/
    ssh -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ec2-user@${arr[$i]} "sudo mv ~/request.service /etc/systemd/system"
    ssh -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ec2-user@${arr[$i]} "sudo systemctl enable request"
    ssh -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ec2-user@${arr[$i]} "sudo systemctl start request"
    ssh -i ./attacker -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ec2-user@${arr[$i]} "echo $target_private_ip target.dojo | sudo tee -a /etc/hosts > /dev/null"
done

echo ""
echo "*****************************************************"
echo "Here are Attacker machine IP Addresses"
echo ""
for i in "${!arr[@]}"; do
    echo "Team $((1 + i)): ${arr[$i]}"
done
echo "*****************************************************"
